{"ast":null,"code":"var _jsxFileName = \"/Users/yechan/Desktop/sparta-react/todos/src/components/form/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    todo,\n    setTodo\n  } = _ref;\n  const nextId = useRef(0); // 고유아이디 useRef는 값이 변해도 리렌더 안함\n\n  const ref_title = useRef();\n  const ref_content = useRef(); // const [inputs, setInputs] = useState({\n  //   id: nextId.current,\n  //   title: \"\",\n  //   content: \"\",\n  //   isDone: false,\n  // });\n  // const { title, content } = inputs;\n  // const onChangeHandler = (e) => {\n  //   console.log(e.target.name);\n  //   setInputs({\n  //     id: nextId.current,\n  //     ...inputs,\n  //     [e.target.name]: e.target.value,\n  //     isDone: false,\n  //   });\n  // };\n\n  const onSubmitHandler = () => {\n    // 현재 input에 있는 값 가지고 오는 부분\n    let titleValue = ref_title.current.value;\n    let contentValue = ref_content.current.value; // 새로 만들어줄 객체 생성\n\n    const newData = {\n      id: nextId.current,\n      title: titleValue,\n      content: contentValue,\n      isDone: false\n    }; // 투두리스트 목록에 넣어줌\n\n    setTodo([...todo, newData]); // 빈칸으로 만들어주는 부분\n\n    ref_title.current.value = \"\";\n    ref_content.current.value = \"\"; // 고유 아이디 1증가\n\n    nextId.current++;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\" // onChange={onChangeHandler}\n        // value={title}\n        ,\n        ref: ref_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"content\" // onChange={onChangeHandler}\n        // value={content}\n        ,\n        ref: ref_content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add_button\",\n      onClick: onSubmitHandler,\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"duYjKbvg6cioJfRqqbU5xMEr/eY=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useRef","useState","Form","todo","setTodo","nextId","ref_title","ref_content","onSubmitHandler","titleValue","current","value","contentValue","newData","id","title","content","isDone"],"sources":["/Users/yechan/Desktop/sparta-react/todos/src/components/form/Form.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport \"./style.css\";\nconst Form = ({ todo, setTodo }) => {\n  const nextId = useRef(0); // 고유아이디 useRef는 값이 변해도 리렌더 안함\n  const ref_title = useRef();\n  const ref_content = useRef();\n  // const [inputs, setInputs] = useState({\n  //   id: nextId.current,\n  //   title: \"\",\n  //   content: \"\",\n  //   isDone: false,\n  // });\n  // const { title, content } = inputs;\n  // const onChangeHandler = (e) => {\n  //   console.log(e.target.name);\n  //   setInputs({\n  //     id: nextId.current,\n  //     ...inputs,\n  //     [e.target.name]: e.target.value,\n  //     isDone: false,\n  //   });\n  // };\n\n  const onSubmitHandler = () => {\n    // 현재 input에 있는 값 가지고 오는 부분\n    let titleValue = ref_title.current.value;\n    let contentValue = ref_content.current.value;\n    // 새로 만들어줄 객체 생성\n    const newData = {\n      id: nextId.current,\n      title: titleValue,\n      content: contentValue,\n      isDone: false,\n    };\n    // 투두리스트 목록에 넣어줌\n    setTodo([...todo, newData]);\n\n    // 빈칸으로 만들어주는 부분\n    ref_title.current.value = \"\";\n    ref_content.current.value = \"\";\n    // 고유 아이디 1증가\n    nextId.current++;\n  };\n  return (\n    <div className=\"Form\">\n      <div className=\"input_box\">\n        <label>제목</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          // onChange={onChangeHandler}\n          // value={title}\n          ref={ref_title}\n        ></input>\n        <label>내용</label>\n        <input\n          type=\"text\"\n          name=\"content\"\n          // onChange={onChangeHandler}\n          // value={content}\n          ref={ref_content}\n        ></input>\n      </div>\n      <button className=\"add_button\" onClick={onSubmitHandler}>\n        추가하기\n      </button>\n    </div>\n  );\n};\n\nexport default Form;"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAO,aAAP;;;AACA,MAAMC,IAAI,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC,IAAF;IAAQC;EAAR,CAAsB;EAClC,MAAMC,MAAM,GAAGL,MAAM,CAAC,CAAD,CAArB,CADkC,CACR;;EAC1B,MAAMM,SAAS,GAAGN,MAAM,EAAxB;EACA,MAAMO,WAAW,GAAGP,MAAM,EAA1B,CAHkC,CAIlC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,eAAe,GAAG,MAAM;IAC5B;IACA,IAAIC,UAAU,GAAGH,SAAS,CAACI,OAAV,CAAkBC,KAAnC;IACA,IAAIC,YAAY,GAAGL,WAAW,CAACG,OAAZ,CAAoBC,KAAvC,CAH4B,CAI5B;;IACA,MAAME,OAAO,GAAG;MACdC,EAAE,EAAET,MAAM,CAACK,OADG;MAEdK,KAAK,EAAEN,UAFO;MAGdO,OAAO,EAAEJ,YAHK;MAIdK,MAAM,EAAE;IAJM,CAAhB,CAL4B,CAW5B;;IACAb,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUU,OAAV,CAAD,CAAP,CAZ4B,CAc5B;;IACAP,SAAS,CAACI,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;IACAJ,WAAW,CAACG,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B,CAhB4B,CAiB5B;;IACAN,MAAM,CAACK,OAAP;EACD,CAnBD;;EAoBA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,OAFP,CAGE;QACA;QAJF;QAKE,GAAG,EAAEJ;MALP;QAAA;QAAA;QAAA;MAAA,QAFF,eASE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eAUE;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,SAFP,CAGE;QACA;QAJF;QAKE,GAAG,EAAEC;MALP;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAmBE;MAAQ,SAAS,EAAC,YAAlB;MAA+B,OAAO,EAAEC,eAAxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CAlED;;GAAMN,I;;KAAAA,I;AAoEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}