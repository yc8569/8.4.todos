{"ast":null,"code":"// widgets.js\n// Actions\n// const LOAD = 'my-app/widgets/LOAD';\nconst CREATE = 'todo/CREATE';\nconst GET_TODO = 'todo/GET_TODO';\nconst DELETE_TODO = 'todo/DELETE_TODO';\nconst UPDATE_TODO = \"todo/UPDATE_TODO\";\nconst initialState = {\n  todos: [{\n    id: 1,\n    title: \"리액트 공부하기\",\n    body: \"리액트 기초를 공부해봅시다.\",\n    isDone: false\n  }, {\n    id: 2,\n    title: \" 공부하기\",\n    body: \" 공부해봅시다.\",\n    isDone: true\n  }]\n};\nexport function createTodos(payload) {\n  return {\n    type: CREATE,\n    payload: payload\n  };\n}\nexport function deleteTodo(payload) {\n  return {\n    type: DELETE_TODO,\n    payload\n  };\n}\nexport function updateTodo(payload) {\n  console.log(\"생성\");\n  return {\n    type: UPDATE_TODO,\n    payload\n  };\n} //state ={} 아무 데이터가 넘어오지않으면 빈값일꺼야\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case \"todo/CREATE\":\n      return { ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case \"todo/DELETE_TODO\":\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      };\n\n    case \"todo/UPDATE_TODO\":\n      console.log(action.payload);\n      return { ...state,\n        todos: state.todos.map(todo => {\n          if (todo.id === action.payload) {\n            return { ...todo,\n              isDone: !todo.isDone\n            };\n          } else {\n            return todo;\n          }\n\n          ;\n        })\n      };\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"names":["CREATE","GET_TODO","DELETE_TODO","UPDATE_TODO","initialState","todos","id","title","body","isDone","createTodos","payload","type","deleteTodo","updateTodo","console","log","reducer","state","action","filter","todo","map"],"sources":["/Users/yechan/Desktop/sparta-react/todos/src/redux/modules/todos.js"],"sourcesContent":["// widgets.js\n\n// Actions\n// const LOAD = 'my-app/widgets/LOAD';\n\n\nconst CREATE = 'todo/CREATE';\nconst GET_TODO = 'todo/GET_TODO';\nconst DELETE_TODO = 'todo/DELETE_TODO';\nconst UPDATE_TODO = \"todo/UPDATE_TODO\";\n\n\nconst initialState = {\n    todos: [\n        {\n            id: 1,\n            title: \"리액트 공부하기\",\n            body: \"리액트 기초를 공부해봅시다.\",\n            isDone: false,\n          },\n          {\n            id: 2,\n            title: \" 공부하기\",\n            body: \" 공부해봅시다.\",\n            isDone: true,\n          },\n    ],\n\n  };\n\n\n\n\n  export function createTodos(payload) {\n    \n    return { type: CREATE, payload:payload };\n    }\n\n\n  export function deleteTodo (payload){\n    \n    return { type:DELETE_TODO, payload}\n  }\n  \n  export function updateTodo (payload){\n    console.log(\"생성\")\n    return {type:UPDATE_TODO, payload}\n  }\n\n\n//state ={} 아무 데이터가 넘어오지않으면 빈값일꺼야\nexport default function reducer(state = initialState, action = {}) {\nswitch (action.type) {\n    \n    case \"todo/CREATE\":\n      \n        return{ \n             ...state,\n            todos: [...state.todos, action.payload, ]\n        }\n        \n   \n\n        case \"todo/DELETE_TODO\":\n          \n          return {\n            ...state,\n            todos:state.todos.filter((todo) => todo.id !== action.payload) \n\n          }  \n        case \"todo/UPDATE_TODO\":\n          console.log(action.payload)\n        return {\n          ...state,\n          todos: state.todos.map((todo)=>{\n            if(todo.id === action.payload){\n              return{\n                ...todo,\n                isDone: !todo.isDone\n              };\n            }else{\n              return todo;\n            };\n          })\n\n        }\n   \ndefault: return state;\n}\n};\n"],"mappings":"AAAA;AAEA;AACA;AAGA,MAAMA,MAAM,GAAG,aAAf;AACA,MAAMC,QAAQ,GAAG,eAAjB;AACA,MAAMC,WAAW,GAAG,kBAApB;AACA,MAAMC,WAAW,GAAG,kBAApB;AAGA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CACH;IACIC,EAAE,EAAE,CADR;IAEIC,KAAK,EAAE,UAFX;IAGIC,IAAI,EAAE,iBAHV;IAIIC,MAAM,EAAE;EAJZ,CADG,EAOD;IACEH,EAAE,EAAE,CADN;IAEEC,KAAK,EAAE,OAFT;IAGEC,IAAI,EAAE,UAHR;IAIEC,MAAM,EAAE;EAJV,CAPC;AADU,CAArB;AAqBE,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8B;EAEnC,OAAO;IAAEC,IAAI,EAAEZ,MAAR;IAAgBW,OAAO,EAACA;EAAxB,CAAP;AACC;AAGH,OAAO,SAASE,UAAT,CAAqBF,OAArB,EAA6B;EAElC,OAAO;IAAEC,IAAI,EAACV,WAAP;IAAoBS;EAApB,CAAP;AACD;AAED,OAAO,SAASG,UAAT,CAAqBH,OAArB,EAA6B;EAClCI,OAAO,CAACC,GAAR,CAAY,IAAZ;EACA,OAAO;IAACJ,IAAI,EAACT,WAAN;IAAmBQ;EAAnB,CAAP;AACD,C,CAGH;;AACA,eAAe,SAASM,OAAT,GAAoD;EAAA,IAAnCC,KAAmC,uEAA3Bd,YAA2B;EAAA,IAAbe,MAAa,uEAAJ,EAAI;;EACnE,QAAQA,MAAM,CAACP,IAAf;IAEI,KAAK,aAAL;MAEI,OAAM,EACD,GAAGM,KADF;QAEFb,KAAK,EAAE,CAAC,GAAGa,KAAK,CAACb,KAAV,EAAiBc,MAAM,CAACR,OAAxB;MAFL,CAAN;;IAOA,KAAK,kBAAL;MAEE,OAAO,EACL,GAAGO,KADE;QAELb,KAAK,EAACa,KAAK,CAACb,KAAN,CAAYe,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACf,EAAL,KAAYa,MAAM,CAACR,OAAhD;MAFD,CAAP;;IAKF,KAAK,kBAAL;MACEI,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACR,OAAnB;MACF,OAAO,EACL,GAAGO,KADE;QAELb,KAAK,EAAEa,KAAK,CAACb,KAAN,CAAYiB,GAAZ,CAAiBD,IAAD,IAAQ;UAC7B,IAAGA,IAAI,CAACf,EAAL,KAAYa,MAAM,CAACR,OAAtB,EAA8B;YAC5B,OAAM,EACJ,GAAGU,IADC;cAEJZ,MAAM,EAAE,CAACY,IAAI,CAACZ;YAFV,CAAN;UAID,CALD,MAKK;YACH,OAAOY,IAAP;UACD;;UAAA;QACF,CATM;MAFF,CAAP;;IAeR;MAAS,OAAOH,KAAP;EAnCT;AAqCC;AAAA"},"metadata":{},"sourceType":"module"}