{"ast":null,"code":"var _jsxFileName = \"/Users/yechan/Desktop/sparta-react/todos/src/components/detail/Detail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Todo from \"../todo/Todo\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTodo } from \"../../redux/modules/todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Detail = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const todo = useSelector(state => state.todos.todo);\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch(); // const new_todo = todos.folter((l,inedx) => {\n  //     console.log(l)\n  // })\n\n  useEffect(() => {\n    dispatch(getTodo(id));\n  }, [dispatch, id]);\n  console.log([dispatch, id]); //   const detail_todo = todos.filter((t,source) => {\n  //     source==id\n  //   })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"sd\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this) // <div className=\"list-wrapper\">\n  //     {todos.map((todo) => {\n  //       if (todo.id == params) { \n  //         return (\n  //           <div className=\"todo-container\" key={todo.id}>\n  //           <div>\n  //             <h2 className=\"todo-title\">{todo.title}</h2>\n  //             <div>{todo.body},{todo.id}</div>\n  //           </div>\n  //           <div className=\"button-set\">\n  //             <button\n  //               className=\"todo-delete-button button\"\n  //               // onClick={() => onDeleteHanlder(todo.id)}\n  //             >\n  //               삭제하기\n  //             </button>\n  //             <button\n  //               className=\"todo-complete-button button\"\n  //               // onClick={() => onEditHandler(todo.id)}\n  //             >\n  //               {todo.isDone ? \"취소\" : \"완료\"}  \n  //             </button>\n  //           </div>\n  //         </div>\n  //         );\n  //       } else {\n  //         return null;\n  //       }\n  //     })}\n  //   </div>\n  ;\n};\n\n_s(Detail, \"tii7Ts9L9bwD/5bYmV5KUueImJc=\", false, function () {\n  return [useNavigate, useSelector, useParams, useDispatch];\n});\n\n_c = Detail;\nexport default Detail; // useParams\n// useEffect\n//둘 다시보기\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useState","useEffect","Todo","useNavigate","useParams","useSelector","useDispatch","getTodo","Detail","navigate","todo","state","todos","id","dispatch","console","log"],"sources":["/Users/yechan/Desktop/sparta-react/todos/src/components/detail/Detail.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Todo from \"../todo/Todo\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {getTodo} from \"../../redux/modules/todos\";\n\nconst Detail = () => {\n    const navigate = useNavigate();\n    const todo = useSelector((state) => state.todos.todo);\n    const { id}= useParams();\n    const dispatch = useDispatch();\n    \n   \n   \n   \n    \n  \n   \n   \n    // const new_todo = todos.folter((l,inedx) => {\n    //     console.log(l)\n    // })\n \n    useEffect(() => {\n        dispatch(getTodo(id));\n      }, [dispatch, id]);       \n      console.log([dispatch, id]);\n    //   const detail_todo = todos.filter((t,source) => {\n    //     source==id\n\n    //   })\n \n    \n \n return(<div>sd</div>\n    // <div className=\"list-wrapper\">\n    //     {todos.map((todo) => {\n    //       if (todo.id == params) { \n    //         return (\n    //           <div className=\"todo-container\" key={todo.id}>\n            \n    //           <div>\n    //             <h2 className=\"todo-title\">{todo.title}</h2>\n    //             <div>{todo.body},{todo.id}</div>\n    //           </div>\n    //           <div className=\"button-set\">\n    //             <button\n    //               className=\"todo-delete-button button\"\n    //               // onClick={() => onDeleteHanlder(todo.id)}\n    //             >\n    //               삭제하기\n    //             </button>\n    //             <button\n    //               className=\"todo-complete-button button\"\n    //               // onClick={() => onEditHandler(todo.id)}\n    //             >\n    //               {todo.isDone ? \"취소\" : \"완료\"}  \n    //             </button>\n    //           </div>\n    //         </div>\n    //         );\n    //       } else {\n    //         return null;\n    //       }\n    //     })}\n    //   </div>\n );\n   \n\n\n\n\n};\n\n\nexport default Detail;\n\n// useParams\n// useEffect\n//둘 다시보기"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,kBAArC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,IAAI,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,IAAxB,CAAxB;EACA,MAAM;IAAEG;EAAF,IAAOT,SAAS,EAAtB;EACA,MAAMU,QAAQ,GAAGR,WAAW,EAA5B,CAJiB,CAajB;EACA;EACA;;EAEAL,SAAS,CAAC,MAAM;IACZa,QAAQ,CAACP,OAAO,CAACM,EAAD,CAAR,CAAR;EACD,CAFM,EAEJ,CAACC,QAAD,EAAWD,EAAX,CAFI,CAAT;EAGEE,OAAO,CAACC,GAAR,CAAY,CAACF,QAAD,EAAWD,EAAX,CAAZ,EApBe,CAqBjB;EACA;EAEA;;EAIH,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP,CACG;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA/BH;AAsCA,CAlED;;GAAML,M;UACeL,W,EACJE,W,EACAD,S,EACIE,W;;;KAJfE,M;AAqEN,eAAeA,MAAf,C,CAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}